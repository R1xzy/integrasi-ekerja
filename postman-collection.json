{
  "info": {
    "name": "E-Kerja Backend API Testing - Bearer Token Ready",
    "description": "Koleksi testing untuk semua requirement backend API E-Kerja dengan Bearer Token Authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "[REQ-B-1] API Pengguna dan Autentikasi",
      "item": [
        {
          "name": "[REQ-B-1.1] Register Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Budi Santoso\",\n  \"email\": \"customer.test@example.com\",\n  \"password\": \"Customer123!\",\n  \"phoneNumber\": \"081234567890\",\n  \"roleId\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test pendaftaran user customer baru dengan validasi keunikan email dan phone [C-16]"
          }
        },
        {
          "name": "[REQ-B-1.1] Register Provider",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Siti Nurhaliza Provider\",\n  \"email\": \"provider.test@example.com\",\n  \"password\": \"Provider123!\",\n  \"phoneNumber\": \"081234567891\",\n  \"roleId\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test pendaftaran provider baru - status verifikasi otomatis PENDING"
          }
        },
        {
          "name": "[REQ-B-1.1] Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Admin Test\",\n  \"email\": \"admin.test@example.com\",\n  \"password\": \"Admin123!\",\n  \"phoneNumber\": \"081234567892\",\n  \"roleId\": 3\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test pendaftaran admin baru"
          }
        },
        {
          "name": "[REQ-B-1.1] Register - Duplicate Email Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Duplicate User\",\n  \"email\": \"customer.test@example.com\",\n  \"password\": \"Test123!\",\n  \"phoneNumber\": \"081234567893\",\n  \"roleId\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test validasi keunikan email - should return 409 error"
          }
        },
        {
          "name": "[REQ-B-1.2] Login Customer - Get Bearer Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Auto-extract Bearer token untuk requests selanjutnya",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('customer_token', response.data.token);",
                  "        pm.environment.set('customer_id', response.data.user.id);",
                  "        console.log('Customer Bearer token saved:', response.data.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"customer123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "✅ Login customer dengan seeded credentials dan auto-save Bearer token"
          }
        },
        {
          "name": "[REQ-B-1.2] Login Provider - Get Bearer Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Auto-extract Bearer token untuk requests selanjutnya",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('provider_token', response.data.token);",
                  "        pm.environment.set('provider_id', response.data.user.id);",
                  "        console.log('Provider Bearer token saved:', response.data.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"fanza.atsilatif423@example.com\",\n  \"password\": \"Atsla123!!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "✅ Login provider Fanza dan auto-save Bearer token"
          }
        },
        {
          "name": "[REQ-B-1.2] Login Admin - Get Bearer Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Auto-extract Bearer token untuk requests selanjutnya",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('admin_token', response.data.token);",
                  "        pm.environment.set('admin_id', response.data.user.id);",
                  "        console.log('Admin Bearer token saved:', response.data.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@ekerjakarawang.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "✅ Login admin dengan seeded credentials dan auto-save Bearer token"
          }
        },
        {
          "name": "[REQ-B-1.2] Login Other Provider - For Testing",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Auto-extract Bearer token untuk provider lain",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('other_provider_token', response.data.token);",
                  "        console.log('Other Provider Bearer token saved:', response.data.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"budi.teknisi@example.com\",\n  \"password\": \"Budi123!!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "✅ Login provider Budi untuk testing review reports"
          }
        },
        {
          "name": "[REQ-B-1.2] Login - Invalid Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Test login dengan password salah - should return 401"
          }
        },
        {
          "name": "[REQ-B-1.3] Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer.test@example.com\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "reset-password"]
            },
            "description": "Test reset password dengan validasi complexity [C-15]"
          }
        },
        {
          "name": "[REQ-B-1.4] Get User Profile - Bearer Token Protected",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}",
                "description": "Bearer token dari login customer"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "✅ Test Bearer token authentication pada protected endpoint"
          }
        }
      ]
    },
    {
      "name": "[REQ-B-2] API Manajemen Profil dan Verifikasi",
      "item": [
        {
          "name": "[REQ-B-2.1] Update Provider Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Siti Nurhaliza Provider Updated\",\n  \"phoneNumber\": \"081234567899\",\n  \"address\": \"Jl. Provider Baru No. 123, Karawang\",\n  \"providerBio\": \"Teknisi AC berpengalaman 15 tahun dengan sertifikat BNSP. Melayani wilayah Karawang dan sekitarnya.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "profile"]
            },
            "description": "Test update profil provider"
          }
        },
        {
          "name": "[REQ-B-2.2] Upload Image File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "/path/to/test-image.jpg"
                },
                {
                  "key": "type",
                  "value": "image",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "upload"]
            },
            "description": "Test upload image dengan secure filename generation [C-18]"
          }
        },
        {
          "name": "[REQ-B-2.2] Upload Document File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "/path/to/test-document.pdf"
                },
                {
                  "key": "type",
                  "value": "document",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "upload"]
            },
            "description": "Test upload dokumen PDF"
          }
        },
        {
          "name": "[REQ-B-2.1] Add Provider Document - KTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentType\": \"KTP\",\n  \"documentName\": \"KTP Siti Nurhaliza\",\n  \"fileUrl\": \"/uploads/documents/ktp-siti-test.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/providers/documents",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "documents"]
            },
            "description": "Test upload dokumen KTP untuk verifikasi [C-6]"
          }
        },
        {
          "name": "[REQ-B-2.1] Add Provider Document - Sertifikat",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentType\": \"SERTIFIKAT_PELATIHAN\",\n  \"documentName\": \"Sertifikat Teknisi AC BNSP\",\n  \"issuingOrganization\": \"BNSP\",\n  \"credentialId\": \"BNSP-AC-2024-001\",\n  \"fileUrl\": \"/uploads/documents/sertifikat-siti-test.pdf\",\n  \"issuedAt\": \"2024-06-15T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/providers/documents",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "documents"]
            },
            "description": "Test upload sertifikat pelatihan untuk verifikasi [C-6]"
          }
        },
        {
          "name": "[REQ-B-2.1] Get Provider Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/providers/documents",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "documents"]
            },
            "description": "Test get dokumen provider sendiri"
          }
        },
        {
          "name": "[REQ-B-2.3] Admin - Get Pending Verifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/verification?status=PENDING",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "verification"],
              "query": [
                {
                  "key": "status",
                  "value": "PENDING"
                }
              ]
            },
            "description": "Test admin melihat provider yang pending verifikasi [C-2]"
          }
        },
        {
          "name": "[REQ-B-2.3] Admin - Verify Provider",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"VERIFIED\",\n  \"verifiedAt\": \"2025-07-22T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/verification?providerId={{provider_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "verification"],
              "query": [
                {
                  "key": "providerId",
                  "value": "{{provider_id}}"
                }
              ]
            },
            "description": "Test admin melakukan verifikasi provider [C-2]"
          }
        },
        {
          "name": "[REQ-B-2.3] Admin - Reject Provider",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"REJECTED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/verification?providerId={{provider_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "verification"],
              "query": [
                {
                  "key": "providerId",
                  "value": "{{provider_id}}"
                }
              ]
            },
            "description": "Test admin menolak verifikasi provider"
          }
        }
      ]
    },
    {
      "name": "[REQ-B-3] API Manajemen Layanan dan Portofolio",
      "item": [
        {
          "name": "[REQ-B-3.1] Create Provider Service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"categoryId\": 1,\n  \"serviceTitle\": \"Service AC Split 1/2 PK - 1 PK\",\n  \"description\": \"Service lengkap AC split meliputi cuci evaporator, kondensor, filter. Termasuk pengecekan freon dan kebocoran.\",\n  \"price\": 85000,\n  \"priceUnit\": \"per unit\",\n  \"isAvailable\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/providers/services",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "services"]
            },
            "description": "Test create layanan provider baru"
          }
        },
        {
          "name": "[REQ-B-3.1] Get Provider Services",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/providers/services",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "services"]
            },
            "description": "Test get layanan provider sendiri"
          }
        },
        {
          "name": "[REQ-B-3.1] Update Provider Service",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceTitle\": \"Service AC Split 1/2 PK - 1 PK (Updated)\",\n  \"description\": \"Service lengkap AC split meliputi cuci evaporator, kondensor, filter. Termasuk pengecekan freon, kebocoran, dan tune-up sistem.\",\n  \"price\": 90000\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/providers/services/{{service_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "services", "{{service_id}}"]
            },
            "description": "Test update layanan provider"
          }
        },
        {
          "name": "[REQ-B-3.1] Get Single Service",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/providers/services/{{service_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "services", "{{service_id}}"]
            },
            "description": "Test get detail satu layanan"
          }
        },
        {
          "name": "[REQ-B-3.1] Delete Provider Service",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/providers/services/{{service_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "services", "{{service_id}}"]
            },
            "description": "Test delete layanan provider (dengan validasi order aktif)"
          }
        },
        {
          "name": "[REQ-B-3.1] Create Portfolio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projectTitle\": \"Service AC Rumah Pak Budi\",\n  \"description\": \"Service 4 unit AC split di rumah Pak Budi, Karawang Barat. Semua AC kembali dingin optimal setelah dibersihkan dan ditune-up.\",\n  \"imageUrl\": \"/uploads/images/portfolio-ac-budi.jpg\",\n  \"completedAt\": \"2025-07-15T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/providers/portfolio",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "portfolio"]
            },
            "description": "Test create portfolio provider"
          }
        },
        {
          "name": "[REQ-B-3.1] Get Provider Portfolio",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/providers/portfolio",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "portfolio"]
            },
            "description": "Test get portfolio provider sendiri"
          }
        },
        {
          "name": "[REQ-B-3.1] Get Portfolio by Provider ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/providers/portfolio?providerId={{provider_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "portfolio"],
              "query": [
                {
                  "key": "providerId",
                  "value": "{{provider_id}}"
                }
              ]
            },
            "description": "Test customer melihat portfolio provider tertentu"
          }
        }
      ]
    },
    {
      "name": "[REQ-B-4] API Penemuan dan Detail Layanan",
      "item": [
        {
          "name": "[REQ-B-4.1] Search Services - Basic",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/search?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "search"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Test search layanan basic dengan pagination"
          }
        },
        {
          "name": "[REQ-B-4.1] Search Services - With Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/search?page=1&limit=5&categoryId=1&verified=true&sortBy=price&sortOrder=asc",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "search"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                },
                {
                  "key": "categoryId",
                  "value": "1"
                },
                {
                  "key": "verified",
                  "value": "true"
                },
                {
                  "key": "sortBy",
                  "value": "price"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            },
            "description": "Test search dengan filter kategori, verifikasi, dan sorting"
          }
        },
        {
          "name": "[REQ-B-4.1] Search Services - By Location",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/search?district=Karawang&minPrice=50000&maxPrice=200000",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "search"],
              "query": [
                {
                  "key": "district",
                  "value": "Karawang"
                },
                {
                  "key": "minPrice",
                  "value": "50000"
                },
                {
                  "key": "maxPrice",
                  "value": "200000"
                }
              ]
            },
            "description": "Test search dengan filter lokasi dan range harga"
          }
        },
        {
          "name": "[REQ-B-4.1] Search Services - By Keyword",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/search?search=AC&sortBy=rating&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "search"],
              "query": [
                {
                  "key": "search",
                  "value": "AC"
                },
                {
                  "key": "sortBy",
                  "value": "rating"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            },
            "description": "Test search dengan keyword dan sorting by rating [C-11]"
          }
        },
        {
          "name": "[REQ-B-4.1] Get Service Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/service-categories",
              "host": ["{{base_url}}"],
              "path": ["api", "service-categories"]
            },
            "description": "Test get semua kategori layanan dengan count services"
          }
        },
        {
          "name": "[REQ-B-4.1] Get Provider Detail with Rating",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/providers/{{provider_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "{{provider_id}}"]
            },
            "description": "Test get detail provider dengan rating calculation [C-11]"
          }
        },
        {
          "name": "[REQ-B-4.1] Get Provider Detail with Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/providers/3",
              "host": ["{{base_url}}"],
              "path": ["api", "providers", "3"]
            },
            "description": "Test get provider dari seeded data dengan reviews"
          }
        }
      ]
    },
    {
      "name": "[REQ-B-5] API Proses Pemesanan",
      "item": [
        {
          "name": "[REQ-B-5.1] Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.environment.set('order_id', response.data.id);",
                  "        console.log('Order ID saved:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"providerServiceId\": 4,\n  \"customMessage\": \"Need MacBook Pro repair - screen flickering and overheating issues\",\n  \"scheduledDate\": \"2025-07-30T10:00:00.000Z\",\n  \"jobAddress\": \"Jl. Customer No. 123, Jakarta Pusat\",\n  \"district\": \"Jakarta Pusat\",\n  \"subDistrict\": \"Menteng\",\n  \"ward\": \"Gondangdia\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            },
            "description": "Customer creates new order with location details"
          }
        },
        {
          "name": "[REQ-B-5.1] Get Customer Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Customer views their order history with pagination"
          }
        },
        {
          "name": "[REQ-B-5.1] Get Provider Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders?status=PENDING_ACCEPTANCE&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"],
              "query": [
                {
                  "key": "status",
                  "value": "PENDING_ACCEPTANCE"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Provider views pending orders for acceptance"
          }
        },
        {
          "name": "[REQ-B-5.2] Provider Accept Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"ACCEPTED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Provider accepts the order"
          }
        },
        {
          "name": "[REQ-B-5.2] Provider Reject Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"REJECTED_BY_PROVIDER\",\n  \"information\": \"Sorry, I'm fully booked this week. Please reschedule for next week.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Provider rejects order with reason (using 'information' field)"
          }
        },
        {
          "name": "[REQ-B-5.2] Update Order to In Progress",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"IN_PROGRESS\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Provider starts working on the order"
          }
        },
        {
          "name": "[REQ-B-5.2] Complete Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"COMPLETED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Provider completes the order"
          }
        },
        {
          "name": "[REQ-B-5.3] Get Single Order Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            },
            "description": "Get detailed order information"
          }
        }
      ]
    },
    {
      "name": "[REQ-B-6] API Rincian Pesanan dan Biaya",
      "item": [
        {
          "name": "[REQ-B-6.1] Add Order Detail Item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.environment.set('order_detail_id', response.data.id);",
                  "        console.log('Order Detail ID saved:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Thermal Paste Replacement - High-quality thermal paste for better heat dissipation\",\n  \"quantity\": 1,\n  \"pricePerUnit\": 50000\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details"]
            },
            "description": "Provider adds additional item to order"
          }
        },
        {
          "name": "[REQ-B-6.1] Add Second Order Detail",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Screen Replacement - Original Apple Retina Display\",\n  \"quantity\": 1,\n  \"pricePerUnit\": 2500000\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details"]
            },
            "description": "Provider adds expensive screen replacement"
          }
        },
        {
          "name": "[REQ-B-6.1] Get Order Details List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details"]
            },
            "description": "Customer views all order details with cost summary"
          }
        },
        {
          "name": "[REQ-B-6.1] Customer Approve Detail",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"APPROVED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details/{{order_detail_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details", "{{order_detail_id}}"]
            },
            "description": "Customer approves specific order detail"
          }
        },
        {
          "name": "[REQ-B-6.1] Customer Reject Detail",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"REJECTED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details/2",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details", "2"]
            },
            "description": "Customer rejects expensive screen replacement"
          }
        },
        {
          "name": "[REQ-B-6.1] Delete Rejected Detail",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details/2",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details", "2"]
            },
            "description": "Provider removes rejected detail"
          }
        },
        {
          "name": "[REQ-B-6.1] Final Order Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/details",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}", "details"]
            },
            "description": "Final order details with approved items only"
          }
        }
      ]
    },
    {
      "name": "[REQ-B-7] API Ulasan dan Pelaporan",
      "item": [
        {
          "name": "[REQ-B-7.1] Create Review (C-9 Compliance)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.environment.set('review_id', response.data.id);",
                  "        console.log('Review ID saved:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{order_id}}\",\n  \"rating\": 5,\n  \"comment\": \"Excellent service! Fanza was very professional and fixed my MacBook perfectly. The thermal paste replacement made a huge difference. Highly recommended!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reviews",
              "host": ["{{base_url}}"],
              "path": ["api", "reviews"]
            },
            "description": "Customer creates review for completed order (C-9: only COMPLETED orders)"
          }
        },
        {
          "name": "[REQ-B-7.1] Try Create Review - Order Not Completed",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": 1,\n  \"rating\": 4,\n  \"comment\": \"This should fail - order not completed yet\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reviews",
              "host": ["{{base_url}}"],
              "path": ["api", "reviews"]
            },
            "description": "Test C-9 validation - should fail for non-completed orders"
          }
        },
        {
          "name": "[REQ-B-7.1] Get Reviews for Provider",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reviews?providerId={{provider_id}}&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "reviews"],
              "query": [
                {
                  "key": "providerId",
                  "value": "{{provider_id}}"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all reviews for specific provider with pagination"
          }
        },
        {
          "name": "[REQ-B-7.1] Get Reviews - High Rating Filter",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reviews?minRating=4&sortBy=rating&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["api", "reviews"],
              "query": [
                {
                  "key": "minRating",
                  "value": "4"
                },
                {
                  "key": "sortBy",
                  "value": "rating"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            },
            "description": "Filter reviews with minimum rating 4"
          }
        },
        {
          "name": "[REQ-B-7.3] Report Review - Different User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.environment.set('review_report_id', response.data.id);",
                  "        console.log('Review Report ID saved:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{other_provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewId\": \"{{review_id}}\",\n  \"reason\": \"INAPPROPRIATE_CONTENT\",\n  \"description\": \"This review contains promotional content and seems suspicious\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/review-reports",
              "host": ["{{base_url}}"],
              "path": ["api", "review-reports"]
            },
            "description": "Different provider reports the review"
          }
        },
        {
          "name": "[REQ-B-7.3] Try Report Own Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{customer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reviewId\": \"{{review_id}}\",\n  \"reason\": \"SPAM\",\n  \"description\": \"This should fail - can't report own review\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/review-reports",
              "host": ["{{base_url}}"],
              "path": ["api", "review-reports"]
            },
            "description": "Test validation - customer cannot report their own review"
          }
        },
        {
          "name": "[REQ-B-7.3] Admin - Get Review Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/review-reports?status=PENDING_REVIEW&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "review-reports"],
              "query": [
                {
                  "key": "status",
                  "value": "PENDING_REVIEW"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Admin views pending review reports"
          }
        },
        {
          "name": "[REQ-B-7.3] Admin - Resolve Report (Keep Review)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"RESOLVED_REVIEW_KEPT\",\n  \"adminNotes\": \"Report reviewed. The review content appears to be genuine customer feedback and does not contain inappropriate language. Report rejected, review will remain visible.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/review-reports/{{review_report_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "review-reports", "{{review_report_id}}"]
            },
            "description": "Admin resolves report and keeps review visible"
          }
        },
        {
          "name": "[REQ-B-7.3] Admin - Resolve Report (Remove Review)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"RESOLVED_REVIEW_REMOVED\",\n  \"adminNotes\": \"Report validated. The review contains inappropriate content and has been hidden from public view.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/review-reports/{{review_report_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "review-reports", "{{review_report_id}}"]
            },
            "description": "Admin resolves report and hides review (alternative action)"
          }
        },
        {
          "name": "[REQ-B-7.3] Admin - Get Single Report Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/review-reports/{{review_report_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "review-reports", "{{review_report_id}}"]
            },
            "description": "Admin views detailed report information"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script untuk Bearer Token debugging",
          "console.log('=== REQUEST INFO ===');",
          "console.log('Method:', pm.request.method);",
          "console.log('URL:', pm.request.url.toString());",
          "",
          "// Log Bearer token jika ada",
          "const authHeader = pm.request.headers.get('Authorization');",
          "if (authHeader && authHeader.startsWith('Bearer ')) {",
          "    const token = authHeader.substring(7);",
          "    console.log('Using Bearer token (first 30 chars):', token.substring(0, 30) + '...');",
          "    ",
          "    // Decode JWT payload untuk debugging (tanpa verifikasi)",
          "    try {",
          "        const base64Payload = token.split('.')[1];",
          "        const payload = JSON.parse(atob(base64Payload));",
          "        console.log('Token payload:', {",
          "            userId: payload.userId,",
          "            roleName: payload.roleName,",
          "            exp: new Date(payload.exp * 1000).toISOString()",
          "        });",
          "    } catch (e) {",
          "        console.log('Could not decode token payload');",
          "    }",
          "} else if (authHeader) {",
          "    console.log('Using auth header (non-Bearer):', authHeader);",
          "} else {",
          "    console.log('No authentication header - public endpoint');",
          "}",
          "console.log('==================');",
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script untuk Bearer Token validation",
          "console.log('=== RESPONSE INFO ===');",
          "console.log('Status:', pm.response.code, pm.response.status);",
          "console.log('Response time:', pm.response.responseTime + 'ms');",
          "",
          "// Test umum untuk semua responses",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Test struktur response",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Success response has correct structure', function () {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('success', true);",
          "        pm.expect(jsonData).to.have.property('data');",
          "        pm.expect(jsonData).to.have.property('message');",
          "    });",
          "    ",
          "    // Log response data",
          "    try {",
          "        const responseData = pm.response.json();",
          "        console.log('Response success:', responseData.success);",
          "        console.log('Response message:', responseData.message);",
          "        if (responseData.data && responseData.data.token) {",
          "            console.log('Bearer token received in response');",
          "        }",
          "    } catch (e) {",
          "        console.log('Non-JSON response');",
          "    }",
          "} else {",
          "    pm.test('Error response has correct structure', function () {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('success', false);",
          "        pm.expect(jsonData).to.have.property('error');",
          "    });",
          "    ",
          "    // Log error details",
          "    try {",
          "        const errorData = pm.response.json();",
          "        console.log('Error:', errorData.error);",
          "    } catch (e) {",
          "        console.log('Could not parse error response');",
          "    }",
          "}",
          "console.log('==================');",
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string",
      "description": "Base URL for E-Kerja API"
    },
    {
      "key": "customer_token",
      "value": "",
      "type": "string",
      "description": "Bearer token untuk customer - auto-extracted"
    },
    {
      "key": "provider_token",
      "value": "",
      "type": "string",
      "description": "Bearer token untuk provider (Fanza) - auto-extracted"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string",
      "description": "Bearer token untuk admin - auto-extracted"
    },
    {
      "key": "other_provider_token",
      "value": "",
      "type": "string",
      "description": "Bearer token untuk provider lain (untuk testing review reports)"
    },
    {
      "key": "customer_id",
      "value": "",
      "type": "string",
      "description": "Customer ID - auto-extracted"
    },
    {
      "key": "provider_id",
      "value": "",
      "type": "string",
      "description": "Provider ID (Fanza) - auto-extracted"
    },
    {
      "key": "service_id",
      "value": "",
      "type": "string",
      "description": "Service ID - auto-extracted"
    },
    {
      "key": "order_id",
      "value": "",
      "type": "string",
      "description": "Order ID - auto-extracted from order creation"
    },
    {
      "key": "order_detail_id",
      "value": "",
      "type": "string",
      "description": "Order Detail ID - auto-extracted"
    },
    {
      "key": "review_id",
      "value": "",
      "type": "string",
      "description": "Review ID - auto-extracted from review creation"
    },
    {
      "key": "review_report_id",
      "value": "",
      "type": "string",
      "description": "Review Report ID - auto-extracted"
    }
  ]
}
