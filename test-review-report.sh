#!/bin/bash

# Test Review Report Auto-Hide Feature
echo "üöÄ Testing Review Report Auto-Hide Feature (C-10 & REQ-B-7.2)"
echo "=============================================================="

# Wait for server to be ready
echo "‚è≥ Waiting for server to be ready..."
sleep 3

# Step 1: Login as provider
echo "1Ô∏è‚É£ Logging in as provider..."
PROVIDER_TOKEN=$(curl -s -X POST "http://localhost:3000/api/auth/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"fanza.atsilatif423@example.com","password":"Atsla123!!"}' | \
  jq -r '.data.token // "null"')

if [ "$PROVIDER_TOKEN" = "null" ] || [ -z "$PROVIDER_TOKEN" ]; then
  echo "‚ùå Provider login failed"
  exit 1
fi

echo "‚úÖ Provider login successful"

# Step 2: Get reviews list to find one to report
echo "2Ô∏è‚É£ Finding reviews to report..."
REVIEWS_RESPONSE=$(curl -s -X GET "http://localhost:3000/api/reviews?page=1&limit=5" \
  -H "Authorization: Bearer $PROVIDER_TOKEN")

echo "üìä Reviews response: $REVIEWS_RESPONSE"

# Check if reviews were retrieved successfully
if [[ $REVIEWS_RESPONSE == *"success\":true"* ]]; then
  echo "‚úÖ Successfully retrieved reviews"
  
  # Extract first review ID for testing (in real scenario we'd filter better)
  REVIEW_ID=$(echo $REVIEWS_RESPONSE | jq -r '.data[0].id // "null"')
  
  if [ "$REVIEW_ID" != "null" ] && [ -n "$REVIEW_ID" ]; then
    echo "üìù Target review ID: $REVIEW_ID"
    
    # Step 3: Report the review
    echo "3Ô∏è‚É£ Reporting the review..."
    REPORT_RESPONSE=$(curl -s -X POST "http://localhost:3000/api/review-reports" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $PROVIDER_TOKEN" \
      -d "{\"reviewId\":$REVIEW_ID,\"reason\":\"Testing auto-hide feature\"}")
    
    echo "üìß Report response: $REPORT_RESPONSE"
    
    if [[ $REPORT_RESPONSE == *"automatically hidden"* ]]; then
      echo "üéâ SUCCESS: Review is automatically hidden when reported!"
      echo "‚úÖ [C-10] and [REQ-B-7.2] requirements fulfilled"
    elif [[ $REPORT_RESPONSE == *"already reported"* ]]; then
      echo "‚ö†Ô∏è Review was already reported (expected in repeated tests)"
    else
      echo "‚ùå Unexpected response from report endpoint"
    fi
  else
    echo "‚ùå No review ID found to test with"
  fi
else
  echo "‚ùå Failed to retrieve reviews"
fi

echo ""
echo "=============================================================="
echo "üèÅ Review Report Auto-Hide Test Completed"
